
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000612  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000011  00800060  00800060  00000686  2**0
                  ALLOC
  2 .stab         00000990  00000000  00000000  00000688  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000834  00000000  00000000  00001018  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	2f c0       	rjmp	.+94     	; 0x6c <__vector_6>
   e:	3b c0       	rjmp	.+118    	; 0x86 <__vector_7>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a1 37       	cpi	r26, 0x71	; 113
  3e:	b1 07       	cpc	r27, r17
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	fe d0       	rcall	.+508    	; 0x240 <main>
  44:	e4 c2       	rjmp	.+1480   	; 0x60e <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <servo_init>:
int i;   
unsigned char m0h,m0l,m1h,m1l,m2h,m2l,m3h,m3l,x,y,m4h,m4l,m5h,m5l;
unsigned char temp;
void servo_init()
{
TCCR1A=0x03;
  48:	83 e0       	ldi	r24, 0x03	; 3
  4a:	8f bd       	out	0x2f, r24	; 47
TCCR1B=0x1A;
  4c:	8a e1       	ldi	r24, 0x1A	; 26
  4e:	8e bd       	out	0x2e, r24	; 46
TCNT1H=0x00;
  50:	1d bc       	out	0x2d, r1	; 45
TCNT1L=0x00;
  52:	1c bc       	out	0x2c, r1	; 44
ICR1H=0x00;
  54:	17 bc       	out	0x27, r1	; 39
ICR1L=0x00;
  56:	16 bc       	out	0x26, r1	; 38
OCR1AH=0x19;
  58:	89 e1       	ldi	r24, 0x19	; 25
  5a:	8b bd       	out	0x2b, r24	; 43
OCR1AL=0xC8;
  5c:	88 ec       	ldi	r24, 0xC8	; 200
  5e:	8a bd       	out	0x2a, r24	; 42
//OCR1BH=0x0f;
//OCR1BL=0xA0;
TIMSK=0x18;  
  60:	88 e1       	ldi	r24, 0x18	; 24
  62:	89 bf       	out	0x39, r24	; 57
DDRB=0x3f;
  64:	8f e3       	ldi	r24, 0x3F	; 63
  66:	87 bb       	out	0x17, r24	; 23

sei(); 
  68:	78 94       	sei

}
  6a:	08 95       	ret

0000006c <__vector_6>:

ISR (TIMER1_COMPA_vect) //void timer1_compa_isr(void)
{
  6c:	1f 92       	push	r1
  6e:	0f 92       	push	r0
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	0f 92       	push	r0
  74:	11 24       	eor	r1, r1
PORTB=0X00;
  76:	18 ba       	out	0x18, r1	; 24
TCNT1H=0x00;
  78:	1d bc       	out	0x2d, r1	; 45
TCNT1L=0x00;
  7a:	1c bc       	out	0x2c, r1	; 44
}
  7c:	0f 90       	pop	r0
  7e:	0f be       	out	0x3f, r0	; 63
  80:	0f 90       	pop	r0
  82:	1f 90       	pop	r1
  84:	18 95       	reti

00000086 <__vector_7>:

ISR (TIMER1_COMPB_vect) // void timer1_compb_isr(void)
{
  86:	1f 92       	push	r1
  88:	0f 92       	push	r0
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	0f 92       	push	r0
  8e:	11 24       	eor	r1, r1
  90:	8f 93       	push	r24
  92:	9f 93       	push	r25
switch(i)
  94:	80 91 65 00 	lds	r24, 0x0065
  98:	90 91 66 00 	lds	r25, 0x0066
  9c:	82 30       	cpi	r24, 0x02	; 2
  9e:	91 05       	cpc	r25, r1
  a0:	49 f1       	breq	.+82     	; 0xf4 <__vector_7+0x6e>
  a2:	83 30       	cpi	r24, 0x03	; 3
  a4:	91 05       	cpc	r25, r1
  a6:	34 f4       	brge	.+12     	; 0xb4 <__vector_7+0x2e>
  a8:	00 97       	sbiw	r24, 0x00	; 0
  aa:	71 f0       	breq	.+28     	; 0xc8 <__vector_7+0x42>
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	09 f0       	breq	.+2      	; 0xb2 <__vector_7+0x2c>
  b0:	52 c0       	rjmp	.+164    	; 0x156 <__vector_7+0xd0>
  b2:	15 c0       	rjmp	.+42     	; 0xde <__vector_7+0x58>
  b4:	84 30       	cpi	r24, 0x04	; 4
  b6:	91 05       	cpc	r25, r1
  b8:	99 f1       	breq	.+102    	; 0x120 <__vector_7+0x9a>
  ba:	84 30       	cpi	r24, 0x04	; 4
  bc:	91 05       	cpc	r25, r1
  be:	2c f1       	brlt	.+74     	; 0x10a <__vector_7+0x84>
  c0:	05 97       	sbiw	r24, 0x05	; 5
  c2:	09 f0       	breq	.+2      	; 0xc6 <__vector_7+0x40>
  c4:	48 c0       	rjmp	.+144    	; 0x156 <__vector_7+0xd0>
  c6:	3b c0       	rjmp	.+118    	; 0x13e <__vector_7+0xb8>
{
case 0:
 OCR1BH=m0h;     
  c8:	80 91 61 00 	lds	r24, 0x0061
  cc:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m0l;     
  ce:	80 91 6a 00 	lds	r24, 0x006A
  d2:	88 bd       	out	0x28, r24	; 40
 PORTB=0X01;
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	88 bb       	out	0x18, r24	; 24
 i=1;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	2b c0       	rjmp	.+86     	; 0x134 <__vector_7+0xae>
 break ;  
 
case 1:
 OCR1BH=m1h;       
  de:	80 91 64 00 	lds	r24, 0x0064
  e2:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m1l;      
  e4:	80 91 70 00 	lds	r24, 0x0070
  e8:	88 bd       	out	0x28, r24	; 40
 PORTB=0X02;
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	88 bb       	out	0x18, r24	; 24
 i=2;
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	20 c0       	rjmp	.+64     	; 0x134 <__vector_7+0xae>
 break ; 
 
case 2:
 OCR1BH=m2h;              
  f4:	80 91 6e 00 	lds	r24, 0x006E
  f8:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m2l;                
  fa:	80 91 6b 00 	lds	r24, 0x006B
  fe:	88 bd       	out	0x28, r24	; 40
 PORTB=0X04;
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	88 bb       	out	0x18, r24	; 24
 i=3;
 104:	83 e0       	ldi	r24, 0x03	; 3
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	15 c0       	rjmp	.+42     	; 0x134 <__vector_7+0xae>
 break ;
 
case 3:
 OCR1BH=m3h;   
 10a:	80 91 67 00 	lds	r24, 0x0067
 10e:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m3l;      
 110:	80 91 69 00 	lds	r24, 0x0069
 114:	88 bd       	out	0x28, r24	; 40
 PORTB=0X08;
 116:	88 e0       	ldi	r24, 0x08	; 8
 118:	88 bb       	out	0x18, r24	; 24
 i=4;
 11a:	84 e0       	ldi	r24, 0x04	; 4
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0a c0       	rjmp	.+20     	; 0x134 <__vector_7+0xae>
 break ;

case 4:
 OCR1BH=m4h;   
 120:	80 91 68 00 	lds	r24, 0x0068
 124:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m4l;      
 126:	80 91 6d 00 	lds	r24, 0x006D
 12a:	88 bd       	out	0x28, r24	; 40
 PORTB=0X10;
 12c:	80 e1       	ldi	r24, 0x10	; 16
 12e:	88 bb       	out	0x18, r24	; 24
 i=5;
 130:	85 e0       	ldi	r24, 0x05	; 5
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	90 93 66 00 	sts	0x0066, r25
 138:	80 93 65 00 	sts	0x0065, r24
 13c:	0c c0       	rjmp	.+24     	; 0x156 <__vector_7+0xd0>
 break ;
 
case 5:
 OCR1BH=m5h;   
 13e:	80 91 6f 00 	lds	r24, 0x006F
 142:	89 bd       	out	0x29, r24	; 41
 OCR1BL=m5l;      
 144:	80 91 63 00 	lds	r24, 0x0063
 148:	88 bd       	out	0x28, r24	; 40
 PORTB=0X20;
 14a:	80 e2       	ldi	r24, 0x20	; 32
 14c:	88 bb       	out	0x18, r24	; 24
 i=0;
 14e:	10 92 66 00 	sts	0x0066, r1
 152:	10 92 65 00 	sts	0x0065, r1
 break ; 
 } 
}
 156:	9f 91       	pop	r25
 158:	8f 91       	pop	r24
 15a:	0f 90       	pop	r0
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	0f 90       	pop	r0
 160:	1f 90       	pop	r1
 162:	18 95       	reti

00000164 <mov>:

void mov(float value,int m)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	ea 01       	movw	r28, r20
        unsigned int va;
        va=2600+(value+50)*11.843;  //for degree format
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	48 e4       	ldi	r20, 0x48	; 72
 170:	52 e4       	ldi	r21, 0x42	; 66
 172:	cc d0       	rcall	.+408    	; 0x30c <__addsf3>
 174:	2e ee       	ldi	r18, 0xEE	; 238
 176:	3c e7       	ldi	r19, 0x7C	; 124
 178:	4d e3       	ldi	r20, 0x3D	; 61
 17a:	51 e4       	ldi	r21, 0x41	; 65
 17c:	e5 d1       	rcall	.+970    	; 0x548 <__mulsf3>
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e8       	ldi	r19, 0x80	; 128
 182:	42 e2       	ldi	r20, 0x22	; 34
 184:	55 e4       	ldi	r21, 0x45	; 69
 186:	c2 d0       	rcall	.+388    	; 0x30c <__addsf3>
 188:	25 d1       	rcall	.+586    	; 0x3d4 <__fixunssfsi>
 18a:	36 2f       	mov	r19, r22
 18c:	27 2f       	mov	r18, r23
		//va=795+value*15;      //for potentio meter format
        if(m==2)              
 18e:	c2 30       	cpi	r28, 0x02	; 2
 190:	d1 05       	cpc	r29, r1
 192:	39 f4       	brne	.+14     	; 0x1a2 <mov+0x3e>
        {
                m1l=va;
 194:	60 93 70 00 	sts	0x0070, r22
                temp=va>>8;
 198:	70 93 62 00 	sts	0x0062, r23
                m1h=temp;
 19c:	70 93 64 00 	sts	0x0064, r23
 1a0:	1d c0       	rjmp	.+58     	; 0x1dc <mov+0x78>
        }
        if(m==3)            
 1a2:	c3 30       	cpi	r28, 0x03	; 3
 1a4:	d1 05       	cpc	r29, r1
 1a6:	39 f4       	brne	.+14     	; 0x1b6 <mov+0x52>
        {
                m2l=va;
 1a8:	60 93 6b 00 	sts	0x006B, r22
                temp=va>>8;
 1ac:	70 93 62 00 	sts	0x0062, r23
                m2h=temp;
 1b0:	70 93 6e 00 	sts	0x006E, r23
 1b4:	1d c0       	rjmp	.+58     	; 0x1f0 <mov+0x8c>
        }
        if(m==0)       
 1b6:	20 97       	sbiw	r28, 0x00	; 0
 1b8:	39 f4       	brne	.+14     	; 0x1c8 <mov+0x64>
        {
                m5l=va;
 1ba:	60 93 63 00 	sts	0x0063, r22
                temp=va>>8;
 1be:	70 93 62 00 	sts	0x0062, r23
                m5h=temp;
 1c2:	70 93 6f 00 	sts	0x006F, r23
 1c6:	1c c0       	rjmp	.+56     	; 0x200 <mov+0x9c>
        }
        if(m==1)     
 1c8:	c1 30       	cpi	r28, 0x01	; 1
 1ca:	d1 05       	cpc	r29, r1
 1cc:	39 f4       	brne	.+14     	; 0x1dc <mov+0x78>
        {
                m0l=va;
 1ce:	60 93 6a 00 	sts	0x006A, r22
                temp=va>>8;
 1d2:	70 93 62 00 	sts	0x0062, r23
                m0h=temp;
 1d6:	70 93 61 00 	sts	0x0061, r23
 1da:	12 c0       	rjmp	.+36     	; 0x200 <mov+0x9c>
        }
        if(m==4)     
 1dc:	c4 30       	cpi	r28, 0x04	; 4
 1de:	d1 05       	cpc	r29, r1
 1e0:	39 f4       	brne	.+14     	; 0x1f0 <mov+0x8c>
        {
                m3l=va;
 1e2:	30 93 69 00 	sts	0x0069, r19
                temp=va>>8;
 1e6:	20 93 62 00 	sts	0x0062, r18
                m3h=temp;
 1ea:	20 93 67 00 	sts	0x0067, r18
 1ee:	08 c0       	rjmp	.+16     	; 0x200 <mov+0x9c>
        }
        if(m==5)     
 1f0:	25 97       	sbiw	r28, 0x05	; 5
 1f2:	31 f4       	brne	.+12     	; 0x200 <mov+0x9c>
        {
                m4l=va;
 1f4:	30 93 6d 00 	sts	0x006D, r19
                temp=va>>8;
 1f8:	20 93 62 00 	sts	0x0062, r18
                m4h=temp;
 1fc:	20 93 68 00 	sts	0x0068, r18
        }		
}
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <stop>:
	#include<util/delay.h>
	#include "servo.h"
	#define DELAY 300
	stop()
	{
		mov(90,0);		//LR
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	84 eb       	ldi	r24, 0xB4	; 180
 20c:	92 e4       	ldi	r25, 0x42	; 66
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	50 e0       	ldi	r21, 0x00	; 0
 212:	a8 df       	rcall	.-176    	; 0x164 <mov>
		mov(80,1);		//LL
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	80 ea       	ldi	r24, 0xA0	; 160
 21a:	92 e4       	ldi	r25, 0x42	; 66
 21c:	41 e0       	ldi	r20, 0x01	; 1
 21e:	50 e0       	ldi	r21, 0x00	; 0
 220:	a1 df       	rcall	.-190    	; 0x164 <mov>
		mov(90,2);		//UR
 222:	60 e0       	ldi	r22, 0x00	; 0
 224:	70 e0       	ldi	r23, 0x00	; 0
 226:	84 eb       	ldi	r24, 0xB4	; 180
 228:	92 e4       	ldi	r25, 0x42	; 66
 22a:	42 e0       	ldi	r20, 0x02	; 2
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	9a df       	rcall	.-204    	; 0x164 <mov>
		mov(90,3);		//UL
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	84 eb       	ldi	r24, 0xB4	; 180
 236:	92 e4       	ldi	r25, 0x42	; 66
 238:	43 e0       	ldi	r20, 0x03	; 3
 23a:	50 e0       	ldi	r21, 0x00	; 0
 23c:	93 df       	rcall	.-218    	; 0x164 <mov>
	}
 23e:	08 95       	ret

00000240 <main>:

	int main()
	 {
 240:	ef 92       	push	r14
 242:	ff 92       	push	r15
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
	 
	 DDRC=0x00;
 24c:	14 ba       	out	0x14, r1	; 20
	 PORTC=0x0f;
 24e:	8f e0       	ldi	r24, 0x0F	; 15
 250:	85 bb       	out	0x15, r24	; 21
	 
	 servo_init();
 252:	fa de       	rcall	.-524    	; 0x48 <servo_init>
	 
		stop();
 254:	d8 df       	rcall	.-80     	; 0x206 <stop>
 256:	80 e2       	ldi	r24, 0x20	; 32
 258:	9e e4       	ldi	r25, 0x4E	; 78
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 25a:	2c e2       	ldi	r18, 0x2C	; 44
 25c:	31 e0       	ldi	r19, 0x01	; 1
 25e:	f9 01       	movw	r30, r18
 260:	31 97       	sbiw	r30, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <main+0x20>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 264:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 266:	d9 f7       	brne	.-10     	; 0x25e <main+0x1e>
 268:	80 e3       	ldi	r24, 0x30	; 48
 26a:	e8 2e       	mov	r14, r24
 26c:	85 e7       	ldi	r24, 0x75	; 117
 26e:	f8 2e       	mov	r15, r24
 270:	08 e9       	ldi	r16, 0x98	; 152
 272:	1a e3       	ldi	r17, 0x3A	; 58
	 _delay_ms(2000);
	 while(1)
	   {
		if((PINC & 0x01) == 0x00)
 274:	98 99       	sbic	0x13, 0	; 19
 276:	fe cf       	rjmp	.-4      	; 0x274 <main+0x34>
 278:	ca e5       	ldi	r28, 0x5A	; 90
 27a:	d0 e0       	ldi	r29, 0x00	; 0
		{
		for (char i=0;i<=35;i++)		// Left leg forward
			{
			mov(90-i,2);
 27c:	be 01       	movw	r22, r28
 27e:	88 27       	eor	r24, r24
 280:	77 fd       	sbrc	r23, 7
 282:	80 95       	com	r24
 284:	98 2f       	mov	r25, r24
 286:	d4 d0       	rcall	.+424    	; 0x430 <__floatsisf>
 288:	42 e0       	ldi	r20, 0x02	; 2
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	6b df       	rcall	.-298    	; 0x164 <mov>
 28e:	c7 01       	movw	r24, r14
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <main+0x50>
 294:	21 97       	sbiw	r28, 0x01	; 1
	 _delay_ms(2000);
	 while(1)
	   {
		if((PINC & 0x01) == 0x00)
		{
		for (char i=0;i<=35;i++)		// Left leg forward
 296:	c6 33       	cpi	r28, 0x36	; 54
 298:	d1 05       	cpc	r29, r1
 29a:	81 f7       	brne	.-32     	; 0x27c <main+0x3c>
 29c:	ca e5       	ldi	r28, 0x5A	; 90
 29e:	d0 e0       	ldi	r29, 0x00	; 0
			mov(90-i,2);
			_delay_ms(10);
			}
		for (char i=0;i<=45;i++)
			{
			mov(90-i,0);
 2a0:	be 01       	movw	r22, r28
 2a2:	88 27       	eor	r24, r24
 2a4:	77 fd       	sbrc	r23, 7
 2a6:	80 95       	com	r24
 2a8:	98 2f       	mov	r25, r24
 2aa:	c2 d0       	rcall	.+388    	; 0x430 <__floatsisf>
 2ac:	40 e0       	ldi	r20, 0x00	; 0
 2ae:	50 e0       	ldi	r21, 0x00	; 0
 2b0:	59 df       	rcall	.-334    	; 0x164 <mov>
 2b2:	c8 01       	movw	r24, r16
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x74>
 2b8:	21 97       	sbiw	r28, 0x01	; 1
		for (char i=0;i<=35;i++)		// Left leg forward
			{
			mov(90-i,2);
			_delay_ms(10);
			}
		for (char i=0;i<=45;i++)
 2ba:	cc 32       	cpi	r28, 0x2C	; 44
 2bc:	d1 05       	cpc	r29, r1
 2be:	81 f7       	brne	.-32     	; 0x2a0 <main+0x60>
 2c0:	cd e2       	ldi	r28, 0x2D	; 45
 2c2:	d0 e0       	ldi	r29, 0x00	; 0
			mov(90-i,0);
			_delay_ms(5);
			}
			for (char i=0;i<=45;i++)
			{
			mov(45+i,0);
 2c4:	be 01       	movw	r22, r28
 2c6:	88 27       	eor	r24, r24
 2c8:	77 fd       	sbrc	r23, 7
 2ca:	80 95       	com	r24
 2cc:	98 2f       	mov	r25, r24
 2ce:	b0 d0       	rcall	.+352    	; 0x430 <__floatsisf>
 2d0:	40 e0       	ldi	r20, 0x00	; 0
 2d2:	50 e0       	ldi	r21, 0x00	; 0
 2d4:	47 df       	rcall	.-370    	; 0x164 <mov>
 2d6:	c8 01       	movw	r24, r16
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <main+0x98>
 2dc:	21 96       	adiw	r28, 0x01	; 1
		for (char i=0;i<=45;i++)
			{
			mov(90-i,0);
			_delay_ms(5);
			}
			for (char i=0;i<=45;i++)
 2de:	cb 35       	cpi	r28, 0x5B	; 91
 2e0:	d1 05       	cpc	r29, r1
 2e2:	81 f7       	brne	.-32     	; 0x2c4 <main+0x84>
 2e4:	c7 e3       	ldi	r28, 0x37	; 55
 2e6:	d0 e0       	ldi	r29, 0x00	; 0
			_delay_ms(5);
			}
			
		for (char i=0;i<=35;i++)		
			{
			mov(55+i,2);
 2e8:	be 01       	movw	r22, r28
 2ea:	88 27       	eor	r24, r24
 2ec:	77 fd       	sbrc	r23, 7
 2ee:	80 95       	com	r24
 2f0:	98 2f       	mov	r25, r24
 2f2:	9e d0       	rcall	.+316    	; 0x430 <__floatsisf>
 2f4:	42 e0       	ldi	r20, 0x02	; 2
 2f6:	50 e0       	ldi	r21, 0x00	; 0
 2f8:	35 df       	rcall	.-406    	; 0x164 <mov>
 2fa:	c7 01       	movw	r24, r14
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <main+0xbc>
 300:	21 96       	adiw	r28, 0x01	; 1
			{
			mov(45+i,0);
			_delay_ms(5);
			}
			
		for (char i=0;i<=35;i++)		
 302:	cb 35       	cpi	r28, 0x5B	; 91
 304:	d1 05       	cpc	r29, r1
 306:	81 f7       	brne	.-32     	; 0x2e8 <main+0xa8>
 308:	b5 cf       	rjmp	.-150    	; 0x274 <main+0x34>

0000030a <__subsf3>:
 30a:	50 58       	subi	r21, 0x80	; 128

0000030c <__addsf3>:
 30c:	bb 27       	eor	r27, r27
 30e:	aa 27       	eor	r26, r26
 310:	0e d0       	rcall	.+28     	; 0x32e <__addsf3x>
 312:	e0 c0       	rjmp	.+448    	; 0x4d4 <__fp_round>
 314:	d1 d0       	rcall	.+418    	; 0x4b8 <__fp_pscA>
 316:	30 f0       	brcs	.+12     	; 0x324 <__addsf3+0x18>
 318:	d6 d0       	rcall	.+428    	; 0x4c6 <__fp_pscB>
 31a:	20 f0       	brcs	.+8      	; 0x324 <__addsf3+0x18>
 31c:	31 f4       	brne	.+12     	; 0x32a <__addsf3+0x1e>
 31e:	9f 3f       	cpi	r25, 0xFF	; 255
 320:	11 f4       	brne	.+4      	; 0x326 <__addsf3+0x1a>
 322:	1e f4       	brtc	.+6      	; 0x32a <__addsf3+0x1e>
 324:	c6 c0       	rjmp	.+396    	; 0x4b2 <__fp_nan>
 326:	0e f4       	brtc	.+2      	; 0x32a <__addsf3+0x1e>
 328:	e0 95       	com	r30
 32a:	e7 fb       	bst	r30, 7
 32c:	bc c0       	rjmp	.+376    	; 0x4a6 <__fp_inf>

0000032e <__addsf3x>:
 32e:	e9 2f       	mov	r30, r25
 330:	e2 d0       	rcall	.+452    	; 0x4f6 <__fp_split3>
 332:	80 f3       	brcs	.-32     	; 0x314 <__addsf3+0x8>
 334:	ba 17       	cp	r27, r26
 336:	62 07       	cpc	r22, r18
 338:	73 07       	cpc	r23, r19
 33a:	84 07       	cpc	r24, r20
 33c:	95 07       	cpc	r25, r21
 33e:	18 f0       	brcs	.+6      	; 0x346 <__addsf3x+0x18>
 340:	71 f4       	brne	.+28     	; 0x35e <__addsf3x+0x30>
 342:	9e f5       	brtc	.+102    	; 0x3aa <__addsf3x+0x7c>
 344:	fa c0       	rjmp	.+500    	; 0x53a <__fp_zero>
 346:	0e f4       	brtc	.+2      	; 0x34a <__addsf3x+0x1c>
 348:	e0 95       	com	r30
 34a:	0b 2e       	mov	r0, r27
 34c:	ba 2f       	mov	r27, r26
 34e:	a0 2d       	mov	r26, r0
 350:	0b 01       	movw	r0, r22
 352:	b9 01       	movw	r22, r18
 354:	90 01       	movw	r18, r0
 356:	0c 01       	movw	r0, r24
 358:	ca 01       	movw	r24, r20
 35a:	a0 01       	movw	r20, r0
 35c:	11 24       	eor	r1, r1
 35e:	ff 27       	eor	r31, r31
 360:	59 1b       	sub	r21, r25
 362:	99 f0       	breq	.+38     	; 0x38a <__addsf3x+0x5c>
 364:	59 3f       	cpi	r21, 0xF9	; 249
 366:	50 f4       	brcc	.+20     	; 0x37c <__addsf3x+0x4e>
 368:	50 3e       	cpi	r21, 0xE0	; 224
 36a:	68 f1       	brcs	.+90     	; 0x3c6 <__addsf3x+0x98>
 36c:	1a 16       	cp	r1, r26
 36e:	f0 40       	sbci	r31, 0x00	; 0
 370:	a2 2f       	mov	r26, r18
 372:	23 2f       	mov	r18, r19
 374:	34 2f       	mov	r19, r20
 376:	44 27       	eor	r20, r20
 378:	58 5f       	subi	r21, 0xF8	; 248
 37a:	f3 cf       	rjmp	.-26     	; 0x362 <__addsf3x+0x34>
 37c:	46 95       	lsr	r20
 37e:	37 95       	ror	r19
 380:	27 95       	ror	r18
 382:	a7 95       	ror	r26
 384:	f0 40       	sbci	r31, 0x00	; 0
 386:	53 95       	inc	r21
 388:	c9 f7       	brne	.-14     	; 0x37c <__addsf3x+0x4e>
 38a:	7e f4       	brtc	.+30     	; 0x3aa <__addsf3x+0x7c>
 38c:	1f 16       	cp	r1, r31
 38e:	ba 0b       	sbc	r27, r26
 390:	62 0b       	sbc	r22, r18
 392:	73 0b       	sbc	r23, r19
 394:	84 0b       	sbc	r24, r20
 396:	ba f0       	brmi	.+46     	; 0x3c6 <__addsf3x+0x98>
 398:	91 50       	subi	r25, 0x01	; 1
 39a:	a1 f0       	breq	.+40     	; 0x3c4 <__addsf3x+0x96>
 39c:	ff 0f       	add	r31, r31
 39e:	bb 1f       	adc	r27, r27
 3a0:	66 1f       	adc	r22, r22
 3a2:	77 1f       	adc	r23, r23
 3a4:	88 1f       	adc	r24, r24
 3a6:	c2 f7       	brpl	.-16     	; 0x398 <__addsf3x+0x6a>
 3a8:	0e c0       	rjmp	.+28     	; 0x3c6 <__addsf3x+0x98>
 3aa:	ba 0f       	add	r27, r26
 3ac:	62 1f       	adc	r22, r18
 3ae:	73 1f       	adc	r23, r19
 3b0:	84 1f       	adc	r24, r20
 3b2:	48 f4       	brcc	.+18     	; 0x3c6 <__addsf3x+0x98>
 3b4:	87 95       	ror	r24
 3b6:	77 95       	ror	r23
 3b8:	67 95       	ror	r22
 3ba:	b7 95       	ror	r27
 3bc:	f7 95       	ror	r31
 3be:	9e 3f       	cpi	r25, 0xFE	; 254
 3c0:	08 f0       	brcs	.+2      	; 0x3c4 <__addsf3x+0x96>
 3c2:	b3 cf       	rjmp	.-154    	; 0x32a <__addsf3+0x1e>
 3c4:	93 95       	inc	r25
 3c6:	88 0f       	add	r24, r24
 3c8:	08 f0       	brcs	.+2      	; 0x3cc <__addsf3x+0x9e>
 3ca:	99 27       	eor	r25, r25
 3cc:	ee 0f       	add	r30, r30
 3ce:	97 95       	ror	r25
 3d0:	87 95       	ror	r24
 3d2:	08 95       	ret

000003d4 <__fixunssfsi>:
 3d4:	98 d0       	rcall	.+304    	; 0x506 <__fp_splitA>
 3d6:	88 f0       	brcs	.+34     	; 0x3fa <__fixunssfsi+0x26>
 3d8:	9f 57       	subi	r25, 0x7F	; 127
 3da:	90 f0       	brcs	.+36     	; 0x400 <__fixunssfsi+0x2c>
 3dc:	b9 2f       	mov	r27, r25
 3de:	99 27       	eor	r25, r25
 3e0:	b7 51       	subi	r27, 0x17	; 23
 3e2:	a0 f0       	brcs	.+40     	; 0x40c <__fixunssfsi+0x38>
 3e4:	d1 f0       	breq	.+52     	; 0x41a <__fixunssfsi+0x46>
 3e6:	66 0f       	add	r22, r22
 3e8:	77 1f       	adc	r23, r23
 3ea:	88 1f       	adc	r24, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	1a f0       	brmi	.+6      	; 0x3f6 <__fixunssfsi+0x22>
 3f0:	ba 95       	dec	r27
 3f2:	c9 f7       	brne	.-14     	; 0x3e6 <__fixunssfsi+0x12>
 3f4:	12 c0       	rjmp	.+36     	; 0x41a <__fixunssfsi+0x46>
 3f6:	b1 30       	cpi	r27, 0x01	; 1
 3f8:	81 f0       	breq	.+32     	; 0x41a <__fixunssfsi+0x46>
 3fa:	9f d0       	rcall	.+318    	; 0x53a <__fp_zero>
 3fc:	b1 e0       	ldi	r27, 0x01	; 1
 3fe:	08 95       	ret
 400:	9c c0       	rjmp	.+312    	; 0x53a <__fp_zero>
 402:	67 2f       	mov	r22, r23
 404:	78 2f       	mov	r23, r24
 406:	88 27       	eor	r24, r24
 408:	b8 5f       	subi	r27, 0xF8	; 248
 40a:	39 f0       	breq	.+14     	; 0x41a <__fixunssfsi+0x46>
 40c:	b9 3f       	cpi	r27, 0xF9	; 249
 40e:	cc f3       	brlt	.-14     	; 0x402 <__fixunssfsi+0x2e>
 410:	86 95       	lsr	r24
 412:	77 95       	ror	r23
 414:	67 95       	ror	r22
 416:	b3 95       	inc	r27
 418:	d9 f7       	brne	.-10     	; 0x410 <__fixunssfsi+0x3c>
 41a:	3e f4       	brtc	.+14     	; 0x42a <__fixunssfsi+0x56>
 41c:	90 95       	com	r25
 41e:	80 95       	com	r24
 420:	70 95       	com	r23
 422:	61 95       	neg	r22
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	8f 4f       	sbci	r24, 0xFF	; 255
 428:	9f 4f       	sbci	r25, 0xFF	; 255
 42a:	08 95       	ret

0000042c <__floatunsisf>:
 42c:	e8 94       	clt
 42e:	09 c0       	rjmp	.+18     	; 0x442 <__floatsisf+0x12>

00000430 <__floatsisf>:
 430:	97 fb       	bst	r25, 7
 432:	3e f4       	brtc	.+14     	; 0x442 <__floatsisf+0x12>
 434:	90 95       	com	r25
 436:	80 95       	com	r24
 438:	70 95       	com	r23
 43a:	61 95       	neg	r22
 43c:	7f 4f       	sbci	r23, 0xFF	; 255
 43e:	8f 4f       	sbci	r24, 0xFF	; 255
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	99 23       	and	r25, r25
 444:	a9 f0       	breq	.+42     	; 0x470 <__stack+0x11>
 446:	f9 2f       	mov	r31, r25
 448:	96 e9       	ldi	r25, 0x96	; 150
 44a:	bb 27       	eor	r27, r27
 44c:	93 95       	inc	r25
 44e:	f6 95       	lsr	r31
 450:	87 95       	ror	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f1 11       	cpse	r31, r1
 45a:	f8 cf       	rjmp	.-16     	; 0x44c <__floatsisf+0x1c>
 45c:	fa f4       	brpl	.+62     	; 0x49c <__stack+0x3d>
 45e:	bb 0f       	add	r27, r27
 460:	11 f4       	brne	.+4      	; 0x466 <__stack+0x7>
 462:	60 ff       	sbrs	r22, 0
 464:	1b c0       	rjmp	.+54     	; 0x49c <__stack+0x3d>
 466:	6f 5f       	subi	r22, 0xFF	; 255
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	8f 4f       	sbci	r24, 0xFF	; 255
 46c:	9f 4f       	sbci	r25, 0xFF	; 255
 46e:	16 c0       	rjmp	.+44     	; 0x49c <__stack+0x3d>
 470:	88 23       	and	r24, r24
 472:	11 f0       	breq	.+4      	; 0x478 <__stack+0x19>
 474:	96 e9       	ldi	r25, 0x96	; 150
 476:	11 c0       	rjmp	.+34     	; 0x49a <__stack+0x3b>
 478:	77 23       	and	r23, r23
 47a:	21 f0       	breq	.+8      	; 0x484 <__stack+0x25>
 47c:	9e e8       	ldi	r25, 0x8E	; 142
 47e:	87 2f       	mov	r24, r23
 480:	76 2f       	mov	r23, r22
 482:	05 c0       	rjmp	.+10     	; 0x48e <__stack+0x2f>
 484:	66 23       	and	r22, r22
 486:	71 f0       	breq	.+28     	; 0x4a4 <__stack+0x45>
 488:	96 e8       	ldi	r25, 0x86	; 134
 48a:	86 2f       	mov	r24, r22
 48c:	70 e0       	ldi	r23, 0x00	; 0
 48e:	60 e0       	ldi	r22, 0x00	; 0
 490:	2a f0       	brmi	.+10     	; 0x49c <__stack+0x3d>
 492:	9a 95       	dec	r25
 494:	66 0f       	add	r22, r22
 496:	77 1f       	adc	r23, r23
 498:	88 1f       	adc	r24, r24
 49a:	da f7       	brpl	.-10     	; 0x492 <__stack+0x33>
 49c:	88 0f       	add	r24, r24
 49e:	96 95       	lsr	r25
 4a0:	87 95       	ror	r24
 4a2:	97 f9       	bld	r25, 7
 4a4:	08 95       	ret

000004a6 <__fp_inf>:
 4a6:	97 f9       	bld	r25, 7
 4a8:	9f 67       	ori	r25, 0x7F	; 127
 4aa:	80 e8       	ldi	r24, 0x80	; 128
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	08 95       	ret

000004b2 <__fp_nan>:
 4b2:	9f ef       	ldi	r25, 0xFF	; 255
 4b4:	80 ec       	ldi	r24, 0xC0	; 192
 4b6:	08 95       	ret

000004b8 <__fp_pscA>:
 4b8:	00 24       	eor	r0, r0
 4ba:	0a 94       	dec	r0
 4bc:	16 16       	cp	r1, r22
 4be:	17 06       	cpc	r1, r23
 4c0:	18 06       	cpc	r1, r24
 4c2:	09 06       	cpc	r0, r25
 4c4:	08 95       	ret

000004c6 <__fp_pscB>:
 4c6:	00 24       	eor	r0, r0
 4c8:	0a 94       	dec	r0
 4ca:	12 16       	cp	r1, r18
 4cc:	13 06       	cpc	r1, r19
 4ce:	14 06       	cpc	r1, r20
 4d0:	05 06       	cpc	r0, r21
 4d2:	08 95       	ret

000004d4 <__fp_round>:
 4d4:	09 2e       	mov	r0, r25
 4d6:	03 94       	inc	r0
 4d8:	00 0c       	add	r0, r0
 4da:	11 f4       	brne	.+4      	; 0x4e0 <__fp_round+0xc>
 4dc:	88 23       	and	r24, r24
 4de:	52 f0       	brmi	.+20     	; 0x4f4 <__fp_round+0x20>
 4e0:	bb 0f       	add	r27, r27
 4e2:	40 f4       	brcc	.+16     	; 0x4f4 <__fp_round+0x20>
 4e4:	bf 2b       	or	r27, r31
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__fp_round+0x18>
 4e8:	60 ff       	sbrs	r22, 0
 4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <__fp_round+0x20>
 4ec:	6f 5f       	subi	r22, 0xFF	; 255
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	08 95       	ret

000004f6 <__fp_split3>:
 4f6:	57 fd       	sbrc	r21, 7
 4f8:	90 58       	subi	r25, 0x80	; 128
 4fa:	44 0f       	add	r20, r20
 4fc:	55 1f       	adc	r21, r21
 4fe:	59 f0       	breq	.+22     	; 0x516 <__fp_splitA+0x10>
 500:	5f 3f       	cpi	r21, 0xFF	; 255
 502:	71 f0       	breq	.+28     	; 0x520 <__fp_splitA+0x1a>
 504:	47 95       	ror	r20

00000506 <__fp_splitA>:
 506:	88 0f       	add	r24, r24
 508:	97 fb       	bst	r25, 7
 50a:	99 1f       	adc	r25, r25
 50c:	61 f0       	breq	.+24     	; 0x526 <__fp_splitA+0x20>
 50e:	9f 3f       	cpi	r25, 0xFF	; 255
 510:	79 f0       	breq	.+30     	; 0x530 <__fp_splitA+0x2a>
 512:	87 95       	ror	r24
 514:	08 95       	ret
 516:	12 16       	cp	r1, r18
 518:	13 06       	cpc	r1, r19
 51a:	14 06       	cpc	r1, r20
 51c:	55 1f       	adc	r21, r21
 51e:	f2 cf       	rjmp	.-28     	; 0x504 <__fp_split3+0xe>
 520:	46 95       	lsr	r20
 522:	f1 df       	rcall	.-30     	; 0x506 <__fp_splitA>
 524:	08 c0       	rjmp	.+16     	; 0x536 <__fp_splitA+0x30>
 526:	16 16       	cp	r1, r22
 528:	17 06       	cpc	r1, r23
 52a:	18 06       	cpc	r1, r24
 52c:	99 1f       	adc	r25, r25
 52e:	f1 cf       	rjmp	.-30     	; 0x512 <__fp_splitA+0xc>
 530:	86 95       	lsr	r24
 532:	71 05       	cpc	r23, r1
 534:	61 05       	cpc	r22, r1
 536:	08 94       	sec
 538:	08 95       	ret

0000053a <__fp_zero>:
 53a:	e8 94       	clt

0000053c <__fp_szero>:
 53c:	bb 27       	eor	r27, r27
 53e:	66 27       	eor	r22, r22
 540:	77 27       	eor	r23, r23
 542:	cb 01       	movw	r24, r22
 544:	97 f9       	bld	r25, 7
 546:	08 95       	ret

00000548 <__mulsf3>:
 548:	0b d0       	rcall	.+22     	; 0x560 <__mulsf3x>
 54a:	c4 cf       	rjmp	.-120    	; 0x4d4 <__fp_round>
 54c:	b5 df       	rcall	.-150    	; 0x4b8 <__fp_pscA>
 54e:	28 f0       	brcs	.+10     	; 0x55a <__mulsf3+0x12>
 550:	ba df       	rcall	.-140    	; 0x4c6 <__fp_pscB>
 552:	18 f0       	brcs	.+6      	; 0x55a <__mulsf3+0x12>
 554:	95 23       	and	r25, r21
 556:	09 f0       	breq	.+2      	; 0x55a <__mulsf3+0x12>
 558:	a6 cf       	rjmp	.-180    	; 0x4a6 <__fp_inf>
 55a:	ab cf       	rjmp	.-170    	; 0x4b2 <__fp_nan>
 55c:	11 24       	eor	r1, r1
 55e:	ee cf       	rjmp	.-36     	; 0x53c <__fp_szero>

00000560 <__mulsf3x>:
 560:	ca df       	rcall	.-108    	; 0x4f6 <__fp_split3>
 562:	a0 f3       	brcs	.-24     	; 0x54c <__mulsf3+0x4>

00000564 <__mulsf3_pse>:
 564:	95 9f       	mul	r25, r21
 566:	d1 f3       	breq	.-12     	; 0x55c <__mulsf3+0x14>
 568:	95 0f       	add	r25, r21
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	55 1f       	adc	r21, r21
 56e:	62 9f       	mul	r22, r18
 570:	f0 01       	movw	r30, r0
 572:	72 9f       	mul	r23, r18
 574:	bb 27       	eor	r27, r27
 576:	f0 0d       	add	r31, r0
 578:	b1 1d       	adc	r27, r1
 57a:	63 9f       	mul	r22, r19
 57c:	aa 27       	eor	r26, r26
 57e:	f0 0d       	add	r31, r0
 580:	b1 1d       	adc	r27, r1
 582:	aa 1f       	adc	r26, r26
 584:	64 9f       	mul	r22, r20
 586:	66 27       	eor	r22, r22
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	66 1f       	adc	r22, r22
 58e:	82 9f       	mul	r24, r18
 590:	22 27       	eor	r18, r18
 592:	b0 0d       	add	r27, r0
 594:	a1 1d       	adc	r26, r1
 596:	62 1f       	adc	r22, r18
 598:	73 9f       	mul	r23, r19
 59a:	b0 0d       	add	r27, r0
 59c:	a1 1d       	adc	r26, r1
 59e:	62 1f       	adc	r22, r18
 5a0:	83 9f       	mul	r24, r19
 5a2:	a0 0d       	add	r26, r0
 5a4:	61 1d       	adc	r22, r1
 5a6:	22 1f       	adc	r18, r18
 5a8:	74 9f       	mul	r23, r20
 5aa:	33 27       	eor	r19, r19
 5ac:	a0 0d       	add	r26, r0
 5ae:	61 1d       	adc	r22, r1
 5b0:	23 1f       	adc	r18, r19
 5b2:	84 9f       	mul	r24, r20
 5b4:	60 0d       	add	r22, r0
 5b6:	21 1d       	adc	r18, r1
 5b8:	82 2f       	mov	r24, r18
 5ba:	76 2f       	mov	r23, r22
 5bc:	6a 2f       	mov	r22, r26
 5be:	11 24       	eor	r1, r1
 5c0:	9f 57       	subi	r25, 0x7F	; 127
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	8a f0       	brmi	.+34     	; 0x5e8 <__mulsf3_pse+0x84>
 5c6:	e1 f0       	breq	.+56     	; 0x600 <__mulsf3_pse+0x9c>
 5c8:	88 23       	and	r24, r24
 5ca:	4a f0       	brmi	.+18     	; 0x5de <__mulsf3_pse+0x7a>
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	bb 1f       	adc	r27, r27
 5d2:	66 1f       	adc	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	88 1f       	adc	r24, r24
 5d8:	91 50       	subi	r25, 0x01	; 1
 5da:	50 40       	sbci	r21, 0x00	; 0
 5dc:	a9 f7       	brne	.-22     	; 0x5c8 <__mulsf3_pse+0x64>
 5de:	9e 3f       	cpi	r25, 0xFE	; 254
 5e0:	51 05       	cpc	r21, r1
 5e2:	70 f0       	brcs	.+28     	; 0x600 <__mulsf3_pse+0x9c>
 5e4:	60 cf       	rjmp	.-320    	; 0x4a6 <__fp_inf>
 5e6:	aa cf       	rjmp	.-172    	; 0x53c <__fp_szero>
 5e8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ea:	ec f3       	brlt	.-6      	; 0x5e6 <__mulsf3_pse+0x82>
 5ec:	98 3e       	cpi	r25, 0xE8	; 232
 5ee:	dc f3       	brlt	.-10     	; 0x5e6 <__mulsf3_pse+0x82>
 5f0:	86 95       	lsr	r24
 5f2:	77 95       	ror	r23
 5f4:	67 95       	ror	r22
 5f6:	b7 95       	ror	r27
 5f8:	f7 95       	ror	r31
 5fa:	e7 95       	ror	r30
 5fc:	9f 5f       	subi	r25, 0xFF	; 255
 5fe:	c1 f7       	brne	.-16     	; 0x5f0 <__mulsf3_pse+0x8c>
 600:	fe 2b       	or	r31, r30
 602:	88 0f       	add	r24, r24
 604:	91 1d       	adc	r25, r1
 606:	96 95       	lsr	r25
 608:	87 95       	ror	r24
 60a:	97 f9       	bld	r25, 7
 60c:	08 95       	ret

0000060e <_exit>:
 60e:	f8 94       	cli

00000610 <__stop_program>:
 610:	ff cf       	rjmp	.-2      	; 0x610 <__stop_program>
